{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/aniketsingh/Desktop/Astroshala/frontend/src/lib/utils.ts"],"sourcesContent":["// lib/utils.ts\r\nimport { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}"],"names":[],"mappings":"AAAA,eAAe;;;;AACf;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///Users/aniketsingh/Desktop/Astroshala/frontend/src/app/components/ui/button.tsx"],"sourcesContent":["// components/ui/button.tsx\r\nimport * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive: \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline: \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary: \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }"],"names":[],"mappings":"AAAA,2BAA2B;;;;;;AAC3B;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,qNACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/aniketsingh/Desktop/Astroshala/frontend/src/app/components/ui/input.tsx"],"sourcesContent":["// components/ui/input.tsx\r\nimport * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;AACA;;;;AAKA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wUACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/aniketsingh/Desktop/Astroshala/frontend/src/app/components/ui/card.tsx"],"sourcesContent":["// components/ui/card.tsx\r\nimport * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;;;AACzB;AACA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/aniketsingh/Desktop/Astroshala/frontend/src/app/admin/chat/page.tsx"],"sourcesContent":["\"use client\"\r\nimport type React from \"react\"\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport { Button } from \"@/app/components/ui/button\"\r\nimport { Input } from \"@/app/components/ui/input\"\r\nimport { Card, CardContent } from \"@/app/components/ui/card\"\r\nimport { Loader2, Send, Bot, UserIcon, RotateCcw, Briefcase, Heart, Coins } from \"lucide-react\"\r\nimport axios from \"axios\"\r\nimport ReactMarkdown from \"react-markdown\"\r\n\r\n// API configuration\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5001\"\r\n\r\n// Define types\r\ninterface BirthDetails {\r\n  date?: string\r\n  time?: string\r\n  place?: string\r\n  [key: string]: any // For any other properties\r\n}\r\n\r\ninterface ChatMessage {\r\n  id: string\r\n  role: \"user\" | \"assistant\"\r\n  content: string\r\n  timestamp: string\r\n}\r\n\r\n// Topic types for specialized advice\r\ntype AdviceTopic = \"job\" | \"marriage\" | \"finance\" | null\r\n\r\n// Chat messages hook with unified API\r\nconst useChatMessages = () => {\r\n  const [messages, setMessages] = useState<ChatMessage[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [conversationId, setConversationId] = useState<string | null>(null)\r\n  const [birthDetails, setBirthDetails] = useState<BirthDetails>({})\r\n  const [showTopicSelection, setShowTopicSelection] = useState(false)\r\n  // Add conversation state to track the flow\r\n  const [conversationState, setConversationState] = useState<\r\n    \"introduction\" | \"birth_details\" | \"basic_prompt\" | \"topic_selection\" | \"topic_advice\"\r\n  >(\"introduction\")\r\n  // Track if birth details have been collected\r\n  const [birthDetailsCollected, setBirthDetailsCollected] = useState(false)\r\n\r\n  // Configure axios instance\r\n  const api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n\r\n  // Add auth token to requests if available\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) {\r\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\r\n    }\r\n  }, [])\r\n\r\n  // Start a new conversation\r\n  const startConversation = async (birthDetailsData: BirthDetails | null = null) => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n\r\n      // Reset conversation state to introduction\r\n      setConversationState(\"introduction\")\r\n      setBirthDetailsCollected(false)\r\n      setShowTopicSelection(false)\r\n\r\n      // Use birth details if provided, otherwise use stored ones\r\n      const details = birthDetailsData || birthDetails || {}\r\n\r\n      // Store birth details if provided\r\n      if (birthDetailsData) {\r\n        setBirthDetails(birthDetailsData)\r\n        if (Object.keys(birthDetailsData).length >= 3) {\r\n          setBirthDetailsCollected(true)\r\n        }\r\n      }\r\n\r\n      const token = localStorage.getItem(\"token\")\r\n      let response\r\n\r\n      if (token) {\r\n        // Try authenticated endpoint\r\n        try {\r\n          response = await api.post(\"/api/chat/start\", { birth_details: details })\r\n          setConversationId(response.data.conversation_id)\r\n\r\n          // Add initial message\r\n          const initialMessage: ChatMessage = {\r\n            id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n            role: \"assistant\",\r\n            content:\r\n              \"Welcome to Parasara Jyotish consultation! I'm your astrological assistant. Before we begin, could you please tell me a little about yourself?\",\r\n            timestamp: new Date().toISOString(),\r\n          }\r\n          setMessages([initialMessage])\r\n          setLoading(false)\r\n          return\r\n        } catch (error) {\r\n          console.log(\"Authenticated endpoint failed, using unified endpoint\")\r\n        }\r\n      }\r\n\r\n      // Use the unified endpoint for new conversation\r\n      response = await axios.post(`${API_BASE_URL}/api/chat/query`, {\r\n        message: \"Start conversation\",\r\n        birth_details: details,\r\n        conversation_history: [],\r\n      })\r\n\r\n      // Store conversation ID if available\r\n      if (response.data.conversation_id) {\r\n        setConversationId(response.data.conversation_id)\r\n      } else {\r\n        setConversationId(\"session-\" + Date.now())\r\n      }\r\n\r\n      // Add initial message\r\n      const initialMessage: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content:\r\n          \"Welcome to Parasara Jyotish consultation! I'm your astrological assistant. Before we begin, could you please tell me a little about yourself?\",\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages([initialMessage])\r\n    } catch (err: any) {\r\n      console.error(\"Error starting conversation:\", err)\r\n      setError(err.response?.data?.error || err.message || \"Failed to start conversation\")\r\n\r\n      // Fallback to mock response\r\n      const mockResponse: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content:\r\n          \"Welcome to Parasara Jyotish! I'm your astrological assistant. Before we begin, could you please tell me a little about yourself?\",\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setConversationId(\"mock-conversation-\" + Date.now())\r\n      setMessages([mockResponse])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Request birth details after introduction\r\n  const requestBirthDetails = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setConversationState(\"birth_details\")\r\n\r\n      const birthDetailsMessage: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content:\r\n          \"Thank you for sharing. For an accurate astrological reading, I'll need your birth details. Could you please provide your birth date, time, and place of birth?\",\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages((prev) => [...prev, birthDetailsMessage])\r\n    } catch (err) {\r\n      console.error(\"Error requesting birth details:\", err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Process basic prompt after birth details are collected\r\n  const processBasicPrompt = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setConversationState(\"basic_prompt\")\r\n\r\n      // Create conversation history from previous messages\r\n      const conversationHistory = messages.map((msg) => ({\r\n        role: msg.role,\r\n        content: msg.content,\r\n      }))\r\n\r\n      // Add a message indicating birth chart generation\r\n      const analyzingMsg: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content:\r\n          \"I'm analyzing your birth chart based on Vedic astrology principles. This will include your ascendant, moon sign, planetary positions, and key yogas in your chart...\",\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages((prev) => [...prev, analyzingMsg])\r\n\r\n      // Call the backend for comprehensive birth chart analysis\r\n      const response = await axios.post(`${API_BASE_URL}/api/chat/query`, {\r\n        message:\r\n          \"Please provide a comprehensive birth chart analysis based on my birth details. Include ascendant, moon sign, sun sign, houses, lords, yogas, doshas, and planetary strengths.\",\r\n        conversation_id: conversationId,\r\n        conversation_history: conversationHistory,\r\n        birth_details: birthDetails,\r\n      })\r\n\r\n      // Add response to messages\r\n      const basicPromptMessage: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content: response.data.response,\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages((prev) => [...prev, basicPromptMessage])\r\n\r\n      // Move to topic selection after a delay to allow user to read the birth chart analysis\r\n      setTimeout(() => {\r\n        requestTopicSelection()\r\n      }, 3000)\r\n    } catch (err) {\r\n      console.error(\"Error processing basic prompt:\", err)\r\n\r\n      // Fallback message\r\n      const fallbackMessage: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content:\r\n          \"Based on your birth details, I've analyzed your Vedic birth chart. I can see your ascendant, planetary positions, and key yogas in your chart. There are several interesting patterns that influence different areas of your life. What specific area would you like more detailed guidance on?\",\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages((prev) => [...prev, fallbackMessage])\r\n\r\n      // Still move to topic selection\r\n      setTimeout(() => {\r\n        requestTopicSelection()\r\n      }, 2000)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Request topic selection\r\n  const requestTopicSelection = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setConversationState(\"topic_selection\")\r\n\r\n      const topicSelectionMessage: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content:\r\n          \"Now that I've analyzed your birth chart, which specific area of your life would you like more detailed advice on? Please select one of the options below or ask a specific question.\",\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages((prev) => [...prev, topicSelectionMessage])\r\n      setShowTopicSelection(true)\r\n    } catch (err) {\r\n      console.error(\"Error requesting topic selection:\", err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Request topic-specific advice\r\n  const requestTopicAdvice = async (topic: AdviceTopic) => {\r\n    if (!topic) return\r\n\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      setShowTopicSelection(false)\r\n      setConversationState(\"topic_advice\")\r\n\r\n      // Add user message to the UI immediately\r\n      const topicMessages = {\r\n        job: \"I'd like advice about my career and professional life.\",\r\n        marriage: \"I'd like advice about my marriage and relationships.\",\r\n        finance: \"I'd like advice about my financial situation and wealth.\",\r\n      }\r\n\r\n      const userMsg: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"user\",\r\n        content: topicMessages[topic],\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n      setMessages((prev) => [...prev, userMsg])\r\n\r\n      // Create conversation history from previous messages\r\n      const conversationHistory = messages.map((msg) => ({\r\n        role: msg.role,\r\n        content: msg.content,\r\n      }))\r\n\r\n      // Use the specialized topic endpoint\r\n      const response = await axios.post(`${API_BASE_URL}/api/chat/query`, {\r\n        message: topicMessages[topic],\r\n        conversation_id: conversationId,\r\n        conversation_history: conversationHistory,\r\n        birth_details: birthDetails,\r\n        topic: topic, // Add the topic parameter\r\n      })\r\n\r\n      // Process response\r\n      const assistantMessage: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content: response.data.response,\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages((prev) => [...prev, assistantMessage])\r\n\r\n      // Show topic selection again after advice\r\n      setTimeout(() => {\r\n        setShowTopicSelection(true)\r\n      }, 1000)\r\n    } catch (err: any) {\r\n      console.error(\"Error requesting topic advice:\", err)\r\n      setError(err.response?.data?.error || err.message || \"Failed to get topic advice\")\r\n\r\n      // Fallback to mock response\r\n      const mockResponse: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content: `I'd be happy to provide insights about your ${topic}. To give you the most accurate guidance, could you please share your birth details (date, time, and place of birth)?`,\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages((prev) => [...prev, mockResponse])\r\n\r\n      // Show topic selection again after advice\r\n      setTimeout(() => {\r\n        setShowTopicSelection(true)\r\n      }, 1000)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Send a message\r\n  const sendMessage = async (content: string) => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      setShowTopicSelection(false)\r\n\r\n      // Add user message to the UI immediately\r\n      const userMsg: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"user\",\r\n        content,\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n      setMessages((prev) => [...prev, userMsg])\r\n\r\n      // If no conversation exists, start a new one\r\n      if (!conversationId) {\r\n        await startConversation()\r\n      }\r\n\r\n      // Check if we're in introduction state and need to move to birth details\r\n      if (conversationState === \"introduction\") {\r\n        await requestBirthDetails()\r\n        return\r\n      }\r\n\r\n      // Check if message contains birth details when in birth_details state\r\n      if (conversationState === \"birth_details\") {\r\n        const extractedDetails = extractBirthDetails(content)\r\n        if (extractedDetails) {\r\n          // Update birth details\r\n          const updatedDetails = { ...birthDetails, ...extractedDetails }\r\n          setBirthDetails(updatedDetails)\r\n\r\n          // Check if we have enough details\r\n          if (Object.keys(updatedDetails).length >= 2) {\r\n            setBirthDetailsCollected(true)\r\n\r\n            // Confirm birth details\r\n            const confirmationMsg: ChatMessage = {\r\n              id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n              role: \"assistant\",\r\n              content: `Thank you for providing your birth details. I've recorded:\\n- Date: ${updatedDetails.date || \"Not provided\"}\\n- Time: ${updatedDetails.time || \"Not provided\"}\\n- Place: ${updatedDetails.place || \"Not provided\"}\\n\\nNow I'll analyze your chart.`,\r\n              timestamp: new Date().toISOString(),\r\n            }\r\n\r\n            setMessages((prev) => [...prev, confirmationMsg])\r\n\r\n            // Process basic prompt\r\n            setTimeout(() => {\r\n              processBasicPrompt()\r\n            }, 1500)\r\n            return\r\n          }\r\n        }\r\n\r\n        // If not enough birth details, ask again\r\n        const askAgainMsg: ChatMessage = {\r\n          id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n          role: \"assistant\",\r\n          content:\r\n            \"I still need more birth details. Please provide your complete birth date, time, and place of birth for an accurate reading.\",\r\n          timestamp: new Date().toISOString(),\r\n        }\r\n\r\n        setMessages((prev) => [...prev, askAgainMsg])\r\n        return\r\n      }\r\n\r\n      // Create conversation history from previous messages\r\n      const conversationHistory = messages.map((msg) => ({\r\n        role: msg.role,\r\n        content: msg.content,\r\n      }))\r\n\r\n      // Use the unified chat endpoint\r\n      const response = await axios.post(`${API_BASE_URL}/api/chat/query`, {\r\n        message: content,\r\n        conversation_id: conversationId,\r\n        conversation_history: conversationHistory,\r\n        birth_details: birthDetails,\r\n      })\r\n\r\n      // Store conversation ID if it's a new conversation\r\n      if (\r\n        response.data.conversation_id &&\r\n        conversationId &&\r\n        !conversationId.includes(\"mock\") &&\r\n        !conversationId.includes(\"session\")\r\n      ) {\r\n        setConversationId(response.data.conversation_id)\r\n      }\r\n\r\n      // Process response\r\n      const assistantMessage: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content: response.data.response,\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages((prev) => [...prev, assistantMessage])\r\n\r\n      // Show topic selection again if we're past the basic prompt stage\r\n      if (conversationState === \"topic_selection\" || conversationState === \"topic_advice\") {\r\n        setTimeout(() => {\r\n          setShowTopicSelection(true)\r\n        }, 1000)\r\n      }\r\n    } catch (err: any) {\r\n      console.error(\"Error sending message:\", err)\r\n      setError(err.response?.data?.error || err.message || \"Failed to send message\")\r\n\r\n      // Fallback to mock response\r\n      const mockResponse: ChatMessage = {\r\n        id: `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        role: \"assistant\",\r\n        content: generateMockResponse(content),\r\n        timestamp: new Date().toISOString(),\r\n      }\r\n\r\n      setMessages((prev) => [...prev, mockResponse])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Extract birth details from user message\r\n  const extractBirthDetails = (message: string): BirthDetails | null => {\r\n    // Simple pattern matching to extract birth details\r\n    const datePattern = /(\\d{1,2}[-/]\\d{1,2}[-/]\\d{2,4}|\\d{1,2} [a-zA-Z]+ \\d{2,4})/\r\n    const timePattern = /(\\d{1,2}:\\d{2} ?(?:AM|PM)?|\\d{1,2} ?(?:AM|PM))/i\r\n    const placePattern = /(born in|birth place|place of birth|in) ([A-Za-z\\s,]+)/i\r\n\r\n    const dateMatch = message.match(datePattern)\r\n    const timeMatch = message.match(timePattern)\r\n    const placeMatch = message.match(placePattern)\r\n\r\n    const details: BirthDetails = {}\r\n    if (dateMatch) details.date = dateMatch[1]\r\n    if (timeMatch) details.time = timeMatch[1]\r\n    if (placeMatch) details.place = placeMatch[2]\r\n\r\n    // Also check for common date formats in natural language\r\n    if (!dateMatch && message.toLowerCase().includes(\"born on\")) {\r\n      const bornOnMatch = message.match(/born on\\s+([A-Za-z\\s\\d,]+)/i)\r\n      if (bornOnMatch) details.date = bornOnMatch[1]\r\n    }\r\n\r\n    if (Object.keys(details).length > 0) {\r\n      return details\r\n    }\r\n    return null\r\n  }\r\n\r\n  // Generate a mock response based on the question (fallback)\r\n  const generateMockResponse = (question: string): string => {\r\n    question = question.toLowerCase()\r\n\r\n    if (question.includes(\"planet\") || question.includes(\"graha\")) {\r\n      return \"In Vedic astrology, there are nine celestial bodies or grahas: Sun (Surya), Moon (Chandra), Mars (Mangal), Mercury (Budha), Jupiter (Guru), Venus (Shukra), Saturn (Shani), and the lunar nodes Rahu and Ketu. Each planet represents different energies and influences various aspects of life.\"\r\n    } else if (question.includes(\"house\") || question.includes(\"bhava\")) {\r\n      return \"Vedic astrology divides a birth chart into 12 houses or bhavas, each governing different areas of life. The 1st house represents self and personality, 2nd house wealth, 3rd house siblings, 4th house mother and home, 5th house creativity and children, and so on.\"\r\n    } else if (question.includes(\"zodiac\") || question.includes(\"rashi\")) {\r\n      return \"Vedic astrology uses the sidereal zodiac with 12 signs (rashis): Aries (Mesha), Taurus (Vrishabha), Gemini (Mithuna), Cancer (Karka), Leo (Simha), Virgo (Kanya), Libra (Tula), Scorpio (Vrischika), Sagittarius (Dhanu), Capricorn (Makara), Aquarius (Kumbha), and Pisces (Meena).\"\r\n    } else if (question.includes(\"dasha\") || question.includes(\"period\")) {\r\n      return \"Parasara Jyotish uses the Vimshottari Dasha system to time events. This system divides life into planetary periods (dashas) and sub-periods (antardashas). The sequence is: Sun (6 years), Moon (10 years), Mars (7 years), Rahu (18 years), Jupiter (16 years), Saturn (19 years), Mercury (17 years), Ketu (7 years), and Venus (20 years).\"\r\n    }\r\n    return \"According to Parasara Jyotish principles, your question relates to the cosmic influences that shape our experiences. The planetary positions and their aspects form unique patterns that can provide insights into various life situations. Would you like to know more about a specific area of Vedic astrology?\"\r\n  }\r\n\r\n  // Reset conversation\r\n  const resetConversation = () => {\r\n    setMessages([])\r\n    setConversationId(null)\r\n    setError(null)\r\n    setShowTopicSelection(false)\r\n    setBirthDetails({})\r\n    setBirthDetailsCollected(false)\r\n    setConversationState(\"introduction\")\r\n    startConversation()\r\n  }\r\n\r\n  // Update birth details\r\n  const updateBirthDetails = (details: BirthDetails) => {\r\n    setBirthDetails(details)\r\n    if (Object.keys(details).length >= 2) {\r\n      setBirthDetailsCollected(true)\r\n    }\r\n  }\r\n\r\n  return {\r\n    messages,\r\n    loading,\r\n    error,\r\n    sendMessage,\r\n    startConversation,\r\n    resetConversation,\r\n    birthDetails,\r\n    updateBirthDetails,\r\n    extractBirthDetails,\r\n    requestTopicAdvice,\r\n    showTopicSelection,\r\n    setShowTopicSelection,\r\n    conversationState,\r\n  }\r\n}\r\n\r\nexport default function ChatPage() {\r\n  const {\r\n    messages,\r\n    loading,\r\n    error,\r\n    sendMessage,\r\n    startConversation,\r\n    resetConversation,\r\n    extractBirthDetails,\r\n    requestTopicAdvice,\r\n    showTopicSelection,\r\n  } = useChatMessages()\r\n  const [inputValue, setInputValue] = useState(\"\")\r\n  const messagesEndRef = useRef<HTMLDivElement>(null)\r\n\r\n  // Start conversation if no messages exist\r\n  useEffect(() => {\r\n    if (messages.length === 0) {\r\n      startConversation()\r\n    }\r\n  }, [messages.length, startConversation])\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (inputValue.trim() && !loading) {\r\n      // Check if message contains birth details\r\n      extractBirthDetails(inputValue)\r\n\r\n      sendMessage(inputValue)\r\n      setInputValue(\"\")\r\n    }\r\n  }\r\n\r\n  // Auto-scroll to bottom of messages\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n  }, [messages])\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-[calc(100vh-7rem)]\">\r\n      <div className=\"mb-4 flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-800 dark:text-white\">Astrological Consultation</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-300\">\r\n            Ask questions and receive insights based on Vedic astrological principles\r\n          </p>\r\n        </div>\r\n        <Button\r\n          variant=\"outline\"\r\n          className=\"flex items-center gap-2 text-gray-800 dark:text-gray-200\"\r\n          onClick={resetConversation}\r\n          disabled={loading}\r\n        >\r\n          <RotateCcw size={16} />\r\n          New Consultation\r\n        </Button>\r\n      </div>\r\n\r\n      <Card className=\"flex-1 flex flex-col overflow-hidden dark:bg-gray-900 border-gray-200 dark:border-gray-700\">\r\n        {/* Messages container */}\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-purple-50 dark:bg-gray-900\">\r\n          {messages.length === 0 ? (\r\n            <div className=\"flex flex-col items-center justify-center h-full text-gray-500 dark:text-gray-400\">\r\n              <Bot size={48} className=\"mb-2 text-purple-400 dark:text-purple-300\" />\r\n              <p>Start your consultation by sending a message</p>\r\n              <Button variant=\"outline\" className=\"mt-4\" onClick={() => startConversation()}>\r\n                Start New Consultation\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {messages.map((message, index) => (\r\n                <div\r\n                  key={`${message.id}-${index}`}\r\n                  className={`flex ${message.role === \"user\" ? \"justify-end\" : \"justify-start\"}`}\r\n                >\r\n                  <div\r\n                    className={`flex items-start space-x-2 max-w-[85%] ${\r\n                      message.role === \"user\" ? \"flex-row-reverse space-x-reverse\" : \"flex-row\"\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className={`p-2 rounded-full ${\r\n                        message.role === \"user\"\r\n                          ? \"bg-purple-600 text-white\"\r\n                          : \"bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200\"\r\n                      }`}\r\n                    >\r\n                      {message.role === \"user\" ? <UserIcon size={20} /> : <Bot size={20} />}\r\n                    </div>\r\n                    <Card className={`${message.role === \"user\" ? \"bg-purple-600\" : \"bg-white dark:bg-gray-900\"}`}>\r\n                      <CardContent className=\"p-3\">\r\n                        {message.role === \"assistant\" ? (\r\n                          <div className=\"prose max-w-none text-black dark:text-white space-y-6\">\r\n                            <ReactMarkdown\r\n                              components={{\r\n                                // Enhanced heading formatting\r\n                                h1: ({ ...props }) => (\r\n                                  <h1 className=\"text-2xl font-bold mt-8 mb-4 dark:text-white\" {...props} />\r\n                                ),\r\n                                h2: ({ ...props }) => (\r\n                                  <h2 className=\"text-xl font-bold mt-6 mb-3 dark:text-white\" {...props} />\r\n                                ),\r\n                                h3: ({ ...props }) => (\r\n                                  <h3 className=\"text-lg font-bold mt-5 mb-2 dark:text-white\" {...props} />\r\n                                ),\r\n                                h4: ({ ...props }) => (\r\n                                  <h4 className=\"text-base font-bold mt-4 mb-2 dark:text-white\" {...props} />\r\n                                ),\r\n\r\n                                // Enhanced paragraph spacing\r\n                                p: ({ ...props }) => <p className=\"my-3 dark:text-gray-200\" {...props} />,\r\n\r\n                                // Enhanced list formatting\r\n                                ul: ({ ...props }) => (\r\n                                  <ul className=\"list-disc pl-6 my-4 space-y-2 dark:text-gray-200\" {...props} />\r\n                                ),\r\n                                // Style ordered lists with better numbering\r\n                                ol: ({ ...props }) => (\r\n                                  <ol\r\n                                    className=\"list-decimal pl-6 my-4 space-y-2 font-medium dark:text-gray-200\"\r\n                                    {...props}\r\n                                  />\r\n                                ),\r\n                                // All list items get consistent styling\r\n                                li: ({ ...props }) => <li className=\"my-2 pl-1 dark:text-gray-200\" {...props} />,\r\n\r\n                                // Enhanced horizontal rule\r\n                                hr: ({ ...props }) => (\r\n                                  <hr className=\"my-6 border-t-2 border-gray-200 dark:border-gray-700\" {...props} />\r\n                                ),\r\n\r\n                                // Enhanced strong and emphasis\r\n                                strong: ({ ...props }) => <strong className=\"font-bold dark:text-white\" {...props} />,\r\n                                em: ({ ...props }) => <em className=\"italic dark:text-gray-200\" {...props} />,\r\n                              }}\r\n                            >\r\n                              {message.content}\r\n                            </ReactMarkdown>\r\n                          </div>\r\n                        ) : (\r\n                          <p className=\"text-white\">{message.content}</p>\r\n                        )}\r\n                        <div\r\n                          className={`text-xs mt-3 ${message.role === \"user\" ? \"text-purple-200\" : \"text-gray-500 dark:text-gray-400\"}`}\r\n                        >\r\n                          {new Date(message.timestamp).toLocaleTimeString()}\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n              {/* Topic Selection Buttons */}\r\n              {showTopicSelection && !loading && (\r\n                <div className=\"flex flex-col items-center justify-center my-6 space-y-4\">\r\n                  <p className=\"text-center text-gray-700 dark:text-gray-300 font-medium\">\r\n                    What would you like advice on?\r\n                  </p>\r\n                  <div className=\"flex flex-wrap justify-center gap-4\">\r\n                    <Button\r\n                      onClick={() => requestTopicAdvice(\"job\")}\r\n                      className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-full flex items-center gap-2\"\r\n                    >\r\n                      <Briefcase size={18} />\r\n                      Career & Job\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => requestTopicAdvice(\"marriage\")}\r\n                      className=\"bg-pink-600 hover:bg-pink-700 text-white px-6 py-2 rounded-full flex items-center gap-2\"\r\n                    >\r\n                      <Heart size={18} />\r\n                      Marriage & Relationships\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => requestTopicAdvice(\"finance\")}\r\n                      className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-full flex items-center gap-2\"\r\n                    >\r\n                      <Coins size={18} />\r\n                      Finance & Wealth\r\n                    </Button>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">Or type your own question below</p>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {/* Loading indicator */}\r\n          {loading && (\r\n            <div className=\"flex justify-start\">\r\n              <Card className=\"bg-white dark:bg-gray-800\">\r\n                <CardContent className=\"p-3 flex items-center space-x-2\">\r\n                  <Loader2 size={16} className=\"animate-spin text-purple-600 dark:text-purple-400\" />\r\n                  <span className=\"text-gray-600 dark:text-gray-300\">Interpreting...</span>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          )}\r\n\r\n          {/* Error message */}\r\n          {error && (\r\n            <div className=\"flex justify-center\">\r\n              <Card className=\"bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-800\">\r\n                <CardContent className=\"p-3 text-red-600 dark:text-red-300\">\r\n                  <p>Error: {error}</p>\r\n                  <Button variant=\"outline\" size=\"sm\" className=\"mt-2\" onClick={() => resetConversation()}>\r\n                    Try Again\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          )}\r\n\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Message input */}\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          className=\"p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 mt-auto\"\r\n        >\r\n          <div className=\"flex space-x-2\">\r\n            <Input\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n              placeholder=\"Type your question here...\"\r\n              disabled={loading}\r\n              className=\"flex-grow dark:bg-gray-800 dark:text-white dark:border-gray-700\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={loading || !inputValue.trim()}\r\n              className=\"bg-purple-600 hover:bg-purple-700 dark:bg-purple-700 dark:hover:bg-purple-800\"\r\n            >\r\n              {loading ? <Loader2 size={20} className=\"animate-spin\" /> : <Send size={20} />}\r\n            </Button>\r\n          </div>\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n            Your consultation is based on Vedic astrological principles and knowledge from ancient texts.\r\n          </p>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}