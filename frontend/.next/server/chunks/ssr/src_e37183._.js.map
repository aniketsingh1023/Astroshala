{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/HP%20Shared/All%20Freelance%20Projects/Astroved/frontend/src/lib/utils.ts"],"sourcesContent":["// lib/utils.ts\r\nimport { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}"],"names":[],"mappings":"AAAA,eAAe;;;;AACf;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://D%3A/HP%20Shared/All%20Freelance%20Projects/Astroved/frontend/src/app/components/ui/button.tsx"],"sourcesContent":["// components/ui/button.tsx\r\nimport * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive: \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline: \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary: \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }"],"names":[],"mappings":"AAAA,2BAA2B;;;;;;AAC3B;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,qNACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file://D%3A/HP%20Shared/All%20Freelance%20Projects/Astroved/frontend/src/app/components/ui/input.tsx"],"sourcesContent":["// components/ui/input.tsx\r\nimport * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;AACA;;;;AAKA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wUACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file://D%3A/HP%20Shared/All%20Freelance%20Projects/Astroved/frontend/src/app/components/ui/card.tsx"],"sourcesContent":["// components/ui/card.tsx\r\nimport * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;;;AACzB;AACA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://D%3A/HP%20Shared/All%20Freelance%20Projects/Astroved/frontend/src/app/admin/chat/page.tsx"],"sourcesContent":["// app/admin/chat/page.tsx\r\n'use client';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Button } from '@/app/components/ui/button';\r\nimport { Input } from '@/app/components/ui/input';\r\nimport { Card, CardContent } from '@/app/components/ui/card';\r\nimport { Loader2, Send, Bot, User as UserIcon, RotateCcw } from 'lucide-react';\r\nimport axios from 'axios'; // Make sure axios is installed\r\n\r\n// API configuration\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api';\r\n\r\n// Real chat service implementation\r\nconst useChatMessages = () => {\r\n  const [messages, setMessages] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [conversationId, setConversationId] = useState<string | null>(null);\r\n\r\n  // Get token from localStorage or cookie\r\n  const getAuthToken = () => {\r\n    if (typeof window !== 'undefined') {\r\n      return localStorage.getItem('authToken');\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Configure axios instance with authentication\r\n  const api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  // Add auth token to every request\r\n  api.interceptors.request.use((config) => {\r\n    const token = getAuthToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\n  // Start a new conversation\r\n  const startConversation = async (birthDetails = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await api.post('/chat/start', { birth_details: birthDetails });\r\n      \r\n      if (response.data.success) {\r\n        const { conversation_id, initial_response } = response.data;\r\n        \r\n        setConversationId(conversation_id);\r\n        setMessages([{\r\n          id: Date.now().toString(),\r\n          role: 'assistant',\r\n          content: initial_response,\r\n          timestamp: new Date().toISOString()\r\n        }]);\r\n      } else {\r\n        throw new Error(response.data.error || 'Failed to start conversation');\r\n      }\r\n    } catch (err: any) {\r\n      console.error(\"Error starting conversation:\", err);\r\n      setError(err.response?.data?.error || err.message || \"Failed to start conversation\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Send a message to the conversation\r\n  const sendMessage = async (content: string) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Add user message to the UI immediately\r\n      const userMsg = {\r\n        id: Date.now().toString(),\r\n        role: 'user',\r\n        content,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      setMessages(prev => [...prev, userMsg]);\r\n\r\n      // If no conversation exists, start a new one\r\n      if (!conversationId) {\r\n        await startConversation();\r\n      }\r\n\r\n      // Send message to backend\r\n      const response = await api.post('/chat/continue', {\r\n        conversation_id: conversationId,\r\n        message: content\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Add assistant response to UI\r\n        const aiResponse = {\r\n          id: (Date.now() + 1).toString(),\r\n          role: 'assistant',\r\n          content: response.data.response,\r\n          timestamp: new Date().toISOString()\r\n        };\r\n        \r\n        setMessages(prev => [...prev, aiResponse]);\r\n      } else {\r\n        throw new Error(response.data.error || 'Failed to get response');\r\n      }\r\n    } catch (err: any) {\r\n      console.error(\"Error sending message:\", err);\r\n      setError(err.response?.data?.error || err.message || \"Failed to send message\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load conversation history\r\n  const loadHistory = async (conversationId: string) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await api.get(`/chat/history?conversation_id=${conversationId}`);\r\n      \r\n      if (response.data.success) {\r\n        setConversationId(conversationId);\r\n        setMessages(response.data.messages);\r\n      } else {\r\n        throw new Error(response.data.error || 'Failed to load conversation history');\r\n      }\r\n    } catch (err: any) {\r\n      console.error(\"Error loading history:\", err);\r\n      setError(err.response?.data?.error || err.message || \"Failed to load conversation history\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Reset conversation\r\n  const resetConversation = () => {\r\n    setMessages([]);\r\n    setConversationId(null);\r\n    setError(null);\r\n    startConversation();\r\n  };\r\n\r\n  return { \r\n    messages, \r\n    loading, \r\n    error, \r\n    sendMessage, \r\n    startConversation, \r\n    loadHistory, \r\n    resetConversation,\r\n    conversationId \r\n  };\r\n};\r\n\r\nexport default function ChatPage() {\r\n  const { \r\n    messages, \r\n    loading, \r\n    error, \r\n    sendMessage, \r\n    startConversation, \r\n    resetConversation \r\n  } = useChatMessages();\r\n  const [inputValue, setInputValue] = useState('');\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Check authentication status\r\n  useEffect(() => {\r\n    const checkAuth = () => {\r\n      const token = localStorage.getItem('authToken');\r\n      setIsAuthenticated(!!token);\r\n    };\r\n    \r\n    checkAuth();\r\n    window.addEventListener('storage', checkAuth);\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', checkAuth);\r\n    };\r\n  }, []);\r\n\r\n  // Start conversation if authenticated and no messages exist\r\n  useEffect(() => {\r\n    if (isAuthenticated && messages.length === 0) {\r\n      startConversation();\r\n    }\r\n  }, [isAuthenticated, messages.length, startConversation]);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim() && !loading) {\r\n      sendMessage(inputValue);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  // Auto-scroll to bottom of messages\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  // If not authenticated, show login prompt\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-[calc(100vh-7rem)]\">\r\n        <Card className=\"w-full max-w-md p-6\">\r\n          <CardContent className=\"flex flex-col items-center\">\r\n            <Bot size={48} className=\"mb-4 text-purple-600\" />\r\n            <h2 className=\"text-xl font-bold mb-2\">Authentication Required</h2>\r\n            <p className=\"text-center text-gray-600 mb-4\">\r\n              Please log in to access the Parasara Jyotish consultation.\r\n            </p>\r\n            <Button \r\n              className=\"w-full bg-purple-600 hover:bg-purple-700\"\r\n              onClick={() => window.location.href = '/auth/login'}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-[calc(100vh-7rem)]\">\r\n      <div className=\"mb-4 flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">Astrological Consultation</h1>\r\n          <p className=\"text-gray-600\">Ask questions and receive insights based on Vedic astrological principles</p>\r\n        </div>\r\n        <Button \r\n          variant=\"outline\" \r\n          className=\"flex items-center gap-2\"\r\n          onClick={resetConversation}\r\n          disabled={loading}\r\n        >\r\n          <RotateCcw size={16} />\r\n          New Consultation\r\n        </Button>\r\n      </div>\r\n\r\n      <Card className=\"flex-1 flex flex-col overflow-hidden\">\r\n        {/* Messages container */}\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-purple-50\">\r\n          {messages.length === 0 ? (\r\n            <div className=\"flex flex-col items-center justify-center h-full text-gray-500\">\r\n              <Bot size={48} className=\"mb-2 text-purple-400\" />\r\n              <p>Start your consultation by sending a message</p>\r\n              <Button \r\n                variant=\"outline\" \r\n                className=\"mt-4\"\r\n                onClick={() => startConversation()}\r\n              >\r\n                Start New Consultation\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            messages.map((message) => (\r\n              <div\r\n                key={message.id}\r\n                className={`flex ${\r\n                  message.role === 'user' ? 'justify-end' : 'justify-start'\r\n                }`}\r\n              >\r\n                <div\r\n                  className={`flex items-start space-x-2 max-w-[85%] ${\r\n                    message.role === 'user'\r\n                      ? 'flex-row-reverse space-x-reverse'\r\n                      : 'flex-row'\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`p-2 rounded-full ${\r\n                      message.role === 'user'\r\n                        ? 'bg-purple-600 text-white'\r\n                        : 'bg-gray-200 text-gray-800'\r\n                    }`}\r\n                  >\r\n                    {message.role === 'user' ? (\r\n                      <UserIcon size={20} />\r\n                    ) : (\r\n                      <Bot size={20} />\r\n                    )}\r\n                  </div>\r\n                  <Card\r\n                    className={`${\r\n                      message.role === 'user'\r\n                        ? 'bg-purple-600 text-white'\r\n                        : 'bg-white'\r\n                    }`}\r\n                  >\r\n                    <CardContent className=\"p-3\">\r\n                      <p>{message.content}</p>\r\n                      <div \r\n                        className={`text-xs mt-1 ${\r\n                          message.role === 'user' ? 'text-purple-200' : 'text-gray-400'\r\n                        }`}\r\n                      >\r\n                        {new Date(message.timestamp).toLocaleTimeString()}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n\r\n          {/* Loading indicator */}\r\n          {loading && (\r\n            <div className=\"flex justify-start\">\r\n              <Card className=\"bg-white\">\r\n                <CardContent className=\"p-3 flex items-center space-x-2\">\r\n                  <Loader2 size={16} className=\"animate-spin text-purple-600\" />\r\n                  <span className=\"text-gray-600\">Interpreting...</span>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          )}\r\n\r\n          {/* Error message */}\r\n          {error && (\r\n            <div className=\"flex justify-center\">\r\n              <Card className=\"bg-red-50 border-red-200\">\r\n                <CardContent className=\"p-3 text-red-600\">\r\n                  <p>Error: {error}</p>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    className=\"mt-2\"\r\n                    onClick={() => resetConversation()}\r\n                  >\r\n                    Try Again\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          )}\r\n\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Message input */}\r\n        <form onSubmit={handleSubmit} className=\"p-4 border-t bg-white mt-auto\">\r\n          <div className=\"flex space-x-2\">\r\n            <Input\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n              placeholder=\"Type your question here...\"\r\n              disabled={loading}\r\n              className=\"flex-grow\"\r\n            />\r\n            <Button \r\n              type=\"submit\" \r\n              disabled={loading || !inputValue.trim()}\r\n              className=\"bg-purple-600 hover:bg-purple-700\"\r\n            >\r\n              {loading ? (\r\n                <Loader2 size={20} className=\"animate-spin\" />\r\n              ) : (\r\n                <Send size={20} />\r\n              )}\r\n            </Button>\r\n          </div>\r\n          <p className=\"text-xs text-gray-500 mt-2\">\r\n            Your consultation is based on Vedic astrological principles and knowledge from ancient texts.\r\n          </p>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 801, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}